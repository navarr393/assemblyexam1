     1                                  ;David Navarro
     2                                  ;CPSC240-1 Test 1
     3                                  global resistance
     4                                  extern printf
     5                                  extern scanf
     6                                  
     7                                  section .data
     8 00000000 506C6561736520656E-         inputResistance db "Please enter the resistance numbers of the two subcircuits separated by ws and press enter.",0
     8 00000009 746572207468652072-
     8 00000012 6573697374616E6365-
     8 0000001B 206E756D6265727320-
     8 00000024 6F6620746865207477-
     8 0000002D 6F2073756263697263-
     8 00000036 756974732073657061-
     8 0000003F 726174656420627920-
     8 00000048 777320616E64207072-
     8 00000051 65737320656E746572-
     8 0000005A 2E00               
     9 0000005C 546865736520726573-         outputResistance db "These resistances were received: %lf 立, %lf 立, %lf 立",10,0
     9 00000065 697374616E63657320-
     9 0000006E 776572652072656365-
     9 00000077 697665643A20256C66-
     9 00000080 20CEA92C20256C6620-
     9 00000089 CEA92C20256C6620CE-
     9 00000092 A90A00             
    10 00000095 546865207265736973-         totalResistance db "The resistance of the entire circuit is:  %lf 立",10,0
    10 0000009E 74616E6365206F6620-
    10 000000A7 74686520656E746972-
    10 000000B0 652063697263756974-
    10 000000B9 2069733A2020256C66-
    10 000000C2 20CEA90A00         
    11 000000C7 256C6620256C662025-         threeResistance db "%lf %lf %lf",0
    11 000000D0 6C6600             
    12 000000D3 256C6600                    totalR db "%lf",0
    13                                  section .bss  
    14                                  
    15                                  section .text
    16                                  resistance:
    17                                  
    18                                      ; Back up all registers and set stack pointer to base pointer
    19 00000000 55                          push rbp
    20 00000001 4889E5                      mov rbp, rsp
    21 00000004 57                          push rdi
    22 00000005 56                          push rsi
    23 00000006 52                          push rdx
    24 00000007 51                          push rcx
    25 00000008 4150                        push r8
    26 0000000A 4151                        push r9
    27 0000000C 4152                        push r10
    28 0000000E 4153                        push r11
    29 00000010 4154                        push r12
    30 00000012 4155                        push r13
    31 00000014 4156                        push r14
    32 00000016 4157                        push r15
    33 00000018 53                          push rbx
    34 00000019 9C                          pushf
    35                                  
    36 0000001A 6AFF                        push qword -1                   ; Extra push to create even number of pushes
    37                                  
    38                                  ; ----------------------------------------------------------------------
    39                                  ;Display message to input the resistances
    40 0000001C 6A63                    push qword 99
    41 0000001E B800000000              mov rax, 0
    42 00000023 48BF-                   mov rdi, inputResistance         
    42 00000025 [0000000000000000] 
    43 0000002D E8(00000000)            call printf
    44 00000032 58                      pop rax
    45                                  ; ------------------------------------------------------------------------
    46                                  ;Input 3 resistances
    47 00000033 6AFF                    push qword -1
    48 00000035 6AFE                    push qword -2
    49 00000037 6AFD                    push qword -3
    50 00000039 B800000000              mov rax, 0
    51 0000003E 48BF-                   mov rdi, threeResistance  
    51 00000040 [C700000000000000] 
    52 00000048 4889E6                  mov rsi, rsp                   
    53 0000004B 4889E2                  mov rdx, rsp
    54 0000004E 4883C208                add rdx, 8                     
    55 00000052 4889E1                  mov rcx, rsp
    56 00000055 4883C110                add rcx, 16                   
    57 00000059 E8(00000000)            call scanf
    58 0000005E F20F102C24              movsd xmm5, [rsp]
    59 00000063 F20F10742408            movsd xmm6, [rsp+8]
    60 00000069 F20F107C2410            movsd xmm7, [rsp+16]
    61 0000006F 58                      pop rax                        
    62 00000070 58                      pop rax                        
    63 00000071 58                      pop rax  
    64                                  ;--------------------------------------------------------------------
    65                                  ;Display the three resistances
    66 00000072 6A63                    push qword 99                
    67 00000074 B803000000              mov rax, 3                     
    68 00000079 48BF-                   mov rdi, outputResistance      
    68 0000007B [5C00000000000000] 
    69 00000083 F20F10C5                movsd xmm0, xmm5
    70 00000087 F20F10CE                movsd xmm1, xmm6
    71 0000008B F20F10D7                movsd xmm2, xmm7
    72 0000008F F2440F10FF              movsd xmm15, xmm7              
    73 00000094 E8(00000000)            call printf
    74 00000099 58                      pop rax                        
    75                                  ;--------------------------------------------------------------------------------------
    76                                  ;calculate and display the total resistance
    77 0000009A 6A00                    push qword 0
    78 0000009C 41B801000000            mov r8, 1 
    79 000000A2 F24D0F2AE0              cvtsi2sd xmm12, r8 
    80 000000A7 F2440F5EE5              divsd xmm12, xmm5 
    81                                  
    82 000000AC 6A00                    push qword 0
    83 000000AE 41B901000000            mov r9, 1 
    84 000000B4 F24D0F2AE9              cvtsi2sd xmm13, r9 
    85 000000B9 F2440F5EEE              divsd xmm13, xmm6 
    86                                  
    87 000000BE 6A00                    push qword 0
    88 000000C0 41BA01000000            mov r10, 1 
    89 000000C6 F24D0F2AF2              cvtsi2sd xmm14, r10
    90 000000CB F2440F5EF7              divsd xmm14, xmm7 
    91                                  
    92 000000D0 B801000000              mov rax, 1
    93 000000D5 F2450F58E5              addsd xmm12, xmm13  
    94 000000DA F2450F58E6              addsd xmm12, xmm14 
    95 000000DF F2450F10FC              movsd xmm15, xmm12 
    96                                  
    97 000000E4 41BB01000000            mov r11, 1 
    98 000000EA F24D0F2ADB              cvtsi2sd xmm11, r11
    99 000000EF F2450F5EDF              divsd xmm11, xmm15 
   100 000000F4 F2450F10D3              movsd xmm10, xmm11 
   101                                  
   102 000000F9 B801000000              mov rax, 1
   103 000000FE 48BF-                   mov rdi, totalResistance 
   103 00000100 [9500000000000000] 
   104 00000108 F2410F10C3              movsd xmm0, xmm11
   105 0000010D E8(00000000)            call printf
   106 00000112 58                      pop rax
   107 00000113 58                      pop rax
   108 00000114 58                      pop rax
   109                                  
   110                                  ;--------------------------------------------------------------------------------------
   111 00000115 F2410F10C2              movsd xmm0, xmm10
   112                                  
   113 0000011A 58                      pop rax                         ; Remove extra push of -1 from stack.    
   114                                  ;---------------------------------------------------------------------
   115                                  
   116                                  ; Restores all registers to their original state.
   117 0000011B 9D                      popf                                                 
   118 0000011C 5B                      pop rbx                                                     
   119 0000011D 415F                    pop r15                                                     
   120 0000011F 415E                    pop r14                                                      
   121 00000121 415D                    pop r13                                                      
   122 00000123 415C                    pop r12                                                      
   123 00000125 415B                    pop r11                                                     
   124 00000127 415A                    pop r10                                                     
   125 00000129 4159                    pop r9                                                      
   126 0000012B 4158                    pop r8                                                      
   127 0000012D 59                      pop rcx                                                     
   128 0000012E 5A                      pop rdx                                                     
   129 0000012F 5E                      pop rsi                                                     
   130 00000130 5F                      pop rdi                                                     
   131 00000131 5D                      pop rbp
   132                                  
   133 00000132 C3                      ret
   134                                  
   135                                  
   136                                  
   137                                  
   138                                  
   139                                  
